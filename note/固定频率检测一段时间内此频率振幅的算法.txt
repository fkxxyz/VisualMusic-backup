
【已知数据】
	一个一位数组，表示每个样点的值：
		s[i] = 第i个样点的值
		n = 总样点数
		p = 要检测的最大振动次数
	
【第一步】
	求出此样点数组与同频率正余弦函数的乘积结果（d表示振动一个周期所需样点数）：
		m_sin[i] = s[i] * sin(2*π*i/d)
		m_cos[i] = s[i] * cos(2*π*i/d)
		
	时间复杂度为O(n)
	空间复杂度为O(n)
	
【第二步】
	求出乘积数组的每个元素向后累加每个振动次数的结果：
		sum_sin[i,k] = m_sin[i]+m_sin[i+1]+m_sin[i+2]+...+m_sin[i+k-1]
		sum_cos[i,k] = m_cos[i]+m_cos[i+1]+m_cos[i+2]+...+m_cos[i+k-1]
		
			可用递推的算法更快的计算：
			sum_sin[i,1] = m_sin[i]
			sum_sin[i,k] = sum_sin[i,k-1]+m_sin[i+k-1]
			
		然后求平方和：
		sum[i,k] = sum_sin[i,k]²+sum_cos[i,k]²
		
	时间复杂度为O(n*p)
	空间复杂度为O(n*p)
	
【第三步】
	求出每个振动次数在小窗口移动下平方和的的最大值
		msum[i,k] = max(sum[i-k+1,k]~sum[i,k])
		
	时间复杂度为O(n*p)
	空间复杂度为O(n*p)
	
【第四步】
	求出每个振动次数下的振动幅度：
		v[i,k] = 2/k*√(msum[i,k])
	
	时间复杂度为O(n*p)
	空间复杂度为O(n*p)
	
【第五步】
	取每个振动次数对应的幅度的最小值得到最终结果：
		r[i] = min(v[i,1],v[i,k])

	时间复杂度为O(n*p)
	空间复杂度为O(n)

【输出】
	每个样点对应的时刻的该频率振动幅度 r
