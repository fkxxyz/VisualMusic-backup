// ChildView.h : CChildView 类的接口
//


#pragma once

#include "audio_decoder.h"
#include "wave_pcm.h"
#include "audio_pcm_analyser.h"

typedef struct _TONE_NAME_FREQ {
  LPCTSTR name;
  double freq;
} TONE_NAME_FREQ;

const TONE_NAME_FREQ kTone[] = {
  {_T("D10"), 18794.545146714083856818112887078},
  {_T("#C10"), 17739.688382519814159922325350477},
  {_T("C10"), 16744.036179238312619382399585492},
  {_T("B9"), 15804.265640195971578584145339483},
  {_T("#A9"), 14917.240368578877325030500152844},
  {_T("A9"), 14080},
  {_T("#G9"), 13289.750322558244432718137245879},
  {_T("G9"), 12543.853951415977410742384974715},
  {_T("#F9"), 11839.821526772300765878246705364},
  {_T("F9"), 11175.303405856124302252007700477},
  {_T("E9"), 10548.08182121183775154693635349},
  {_T("#D9"), 9956.0634791065891435638886184363},
  {_T("D9"), 9397.2725733570419284090564435386},
  {_T("#C9"), 8869.8441912599070799611626752387},
  {_T("C9"), 8372.0180896191563096911997927459},
  {_T("B8"), 7902.1328200979857892920726697414},
  {_T("#A8"), 7458.6201842894386625152500764222},
  {_T("A8"), 7040},
  {_T("#G8"), 6644.8751612791222163590686229394},
  {_T("G8"), 6271.9269757079887053711924873572},
  {_T("#F8"), 5919.9107633861503829391233526819},
  {_T("F8"), 5587.6517029280621511260038502385},
  {_T("E8"), 5274.0409106059188757734681767448},
  {_T("#D8"), 4978.0317395532945717819443092181},
  {_T("D8"), 4698.6362866785209642045282217692},
  {_T("#C8"), 4434.9220956299535399805813376194},
  {_T("C8"), 4186.009044809578154845599896373},
  {_T("B7"), 3951.0664100489928946460363348707},
  {_T("#A7"), 3729.3100921447193312576250382111},
  {_T("A7"), 3520},
  {_T("#G7"), 3322.4375806395611081795343114697},
  {_T("G7"), 3135.9634878539943526855962436786},
  {_T("#F7"), 2959.955381693075191469561676341},
  {_T("F7"), 2793.8258514640310755630019251193},
  {_T("E7"), 2637.0204553029594378867340883725},
  {_T("#D7"), 2489.0158697766472858909721546091},
  {_T("D7"), 2349.3181433392604821022641108847},
  {_T("#C7"), 2217.4610478149767699902906688097},
  {_T("C7"), 2093.0045224047890774227999481865},
  {_T("B6"), 1975.5332050244964473230181674354},
  {_T("#A6"), 1864.6550460723596656288125191056},
  {_T("A6"), 1760},
  {_T("#G6"), 1661.2187903197805540897671557349},
  {_T("G6"), 1567.9817439269971763427981218393},
  {_T("#F6"), 1479.9776908465375957347808381704},
  {_T("F6"), 1396.9129257320155377815009625596},
  {_T("E6"), 1318.5102276514797189433670441862},
  {_T("#D6"), 1244.5079348883236429454860773045},
  {_T("D6"), 1174.6590716696302410511320554423},
  {_T("#C6"), 1108.7305239074883849951453344048},
  {_T("C6"), 1046.5022612023945387113999740932},
  {_T("B5"), 987.76660251224822366150908371768},
  {_T("#A5"), 932.32752303617983281440625955278},
  {_T("A5"), 880},
  {_T("#G5"), 830.60939515989027704488357786743},
  {_T("G5"), 783.99087196349858817139906091965},
  {_T("#F5"), 739.98884542326879786739041908525},
  {_T("F5"), 698.45646286600776889075048127982},
  {_T("E5"), 659.25511382573985947168352209311},
  {_T("#D5"), 622.25396744416182147274303865227},
  {_T("D5"), 587.32953583481512052556602772116},
  {_T("#C5"), 554.36526195374419249757266720242},
  {_T("C5"), 523.25113060119726935569998704662},
  {_T("B4"), 493.88330125612411183075454185884},
  {_T("#A4"), 466.16376151808991640720312977639},
  {_T("A4"), 440},
  {_T("#G4"), 415.30469757994513852244178893372},
  {_T("G4"), 391.99543598174929408569953045983},
  {_T("#F4"), 369.99442271163439893369520954262},
  {_T("F4"), 349.22823143300388444537524063991},
  {_T("E4"), 329.62755691286992973584176104655},
  {_T("#D4"), 311.12698372208091073637151932613},
  {_T("D4"), 293.66476791740756026278301386058},
  {_T("#C4"), 277.18263097687209624878633360122},
  {_T("C4"), 261.62556530059863467784999352331},
  {_T("B3"), 246.94165062806205591537727092942},
  {_T("#A3"), 233.0818807590449582036015648882},
  {_T("A3"), 220},
  {_T("#G3"), 207.65234878997256926122089446686},
  {_T("G3"), 195.99771799087464704284976522991},
  {_T("#F3"), 184.99721135581719946684760477131},
  {_T("F3"), 174.61411571650194222268762031995},
  {_T("E3"), 164.81377845643496486792088052328},
  {_T("#D3"), 155.56349186104045536818575966307},
  {_T("D3"), 146.83238395870378013139150693029},
  {_T("#C3"), 138.59131548843604812439316680061},
  {_T("C3"), 130.81278265029931733892499676166},
  {_T("B2"), 123.47082531403102795768863546471},
  {_T("#A2"), 116.5409403795224791018007824441},
  {_T("A2"), 110},
  {_T("#G2"), 103.82617439498628463061044723343},
  {_T("G2"), 97.998858995437323521424882614956},
  {_T("#F2"), 92.498605677908599733423802385655},
  {_T("F2"), 87.307057858250971111343810159977},
  {_T("E2"), 82.406889228217482433960440261638},
  {_T("#D2"), 77.781745930520227684092879831533},
  {_T("D2"), 73.416191979351890065695753465145},
  {_T("#C2"), 69.295657744218024062196583400303},
  {_T("C2"), 65.406391325149658669462498380828},
  {_T("B1"), 61.735412657015513978844317732355},
  {_T("#A1"), 58.270470189761239550900391222049},
  {_T("A1"), 55},
  {_T("#G1"), 51.913087197493142315305223616714},
  {_T("G1"), 48.999429497718661760712441307478},
  {_T("#F1"), 46.249302838954299866711901192828},
  {_T("F1"), 43.653528929125485555671905079988},
  {_T("E1"), 41.20344461410874121698022013082},
  {_T("#D1"), 38.890872965260113842046439915767},
  {_T("D1"), 36.708095989675945032847876732573},
  {_T("#C1"), 34.647828872109012031098291700151},
  {_T("C1"), 32.703195662574829334731249190414},
  {_T("B"), 30.867706328507756989422158866177},
  {_T("#A"), 29.135235094880619775450195611024},
  {_T("A"), 27.5},
  {_T("#G"), 25.956543598746571157652611808357},
  {_T("G"), 24.499714748859330880356220653739},
  {_T("#F"), 23.124651419477149933355950596413},
  {_T("F"), 21.826764464562742777835952539994},
  {_T("E"), 20.601722307054370608490110065409}
};

const int left = 0; // 到左边界的距离（像素）
const int top = 0; // 到顶端边界的距离（像素）
const int pix_freq = 4; // 每个频率元素用多少像素显示
const int pix_time = 8; // 每个时间元素用多少像素显示
const int elem_time = 20; // 时间精度（毫秒）
const int n_time = 60; // 时间元素的个数
const int n_freq = sizeof(kTone)*2/sizeof(TONE_NAME_FREQ); // 频率元素的个数
const int now_n_time = 10; // 最低端时间到当前时间的时间元素个数

const int n_color = 256 * 3;

// 系数函数（0<=x<=1）
inline double k_func(const double x) {
  double k = 1;
  double max = 0.0;
  //return 1/((max*((log(x+exp(-k))+k)/(log(1+exp(-k))+k)))+1);
  return -0.5l * x + 1;
}

// 拉伸函数（0<=x<=1, 0<=y<=1）
inline double scale_func(const double x, const double k) {
  return x * 2;
}


// CChildView 窗口

class CChildView : public CWnd
{
// 构造
 public:
  CChildView();

// 属性
 public:
  CAudioDecoder m_decoder;
  CPCMStream<double> m_pcm_;
  CWavePCMPlayer m_player_;
  CAudioPCMAnalyser<double> m_analyser_;

  double spe[n_time][n_freq];
  COLORREF sp_color[n_color];

  double sc_k[n_freq];

  int m_view;

// 操作
 public:
  void CChildView::CalcSpeArray(int time_pos);

// 重写
   protected:
  virtual BOOL PreCreateWindow(CREATESTRUCT& cs);

// 实现
 public:
  virtual ~CChildView();

  // 生成的消息映射函数
 protected:
  afx_msg void OnPaint();
  DECLARE_MESSAGE_MAP()
 public:
  afx_msg void OnFileOpen();
  afx_msg void OnOperatorPlay();
  afx_msg void OnOperatorStop();
  afx_msg void OnTimer(UINT_PTR nIDEvent);
  afx_msg BOOL OnEraseBkgnd(CDC* pDC);
  virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, UINT nID, CCreateContext* pContext = NULL);
  virtual BOOL DestroyWindow();
  afx_msg void OnView1();
  afx_msg void OnView2();
  afx_msg void OnView3();
};

